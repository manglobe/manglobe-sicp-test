(load "2.33.scm")
(define (accumulate-n op init seqs)
    (if (null? (car seqs))
        '()
        (cons (accumulate op init (map (lambda (sub-seqs) (car sub-seqs)) seqs))
            (accumulate-n op init (map (lambda (sub-seqs) (cdr sub-seqs)) seqs))
        )
    )
)

(define (main)
    (accumulate-n + 0 '((1 2 3) (4 5 6) (7 8 9) (10 11 12)))
)